os:
  - linux

dist: xenial

language: python

python:
    - 3.7

cache:
  apt: true

sudo: true

env:
    global:
        - PANDAS_VERSION=0.24
        - ASTROPY_USE_SYSTEM_PYTEST=1
        - SETUP_CMD='test'
        - TEST_MODE='normal'
        - MINICONDA_URL='http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh'
        - CHIANTI_DATA_URL='http://www.chiantidatabase.org/download/CHIANTI_8.0.2_data.tar.gz'
        - CARSUS_DB_URL='https://github.com/tardis-sn/carsus-db.git'

matrix:
    include:

        - python: 3.7
          env: SETUP_CMD='test'

        # Test with remote data
        - python: 3.7
          env: SETUP_CMD='test --remote-data'

        # Test with slow tests
        - python: 3.7
          env:
            - SETUP_CMD='test --args="--runslow"'
            - INSTALL_CHIANTI=true

        # Test with the test database
        - python: 3.7
          env:
            - SETUP_CMD='test --args="--test-db=$HOME/carsus-db/test_databases/test.db"'
            - TEST_MODE='with_test_db'

        # Do a coverage test in Python 3.
        - python: 3.7
          env: SETUP_CMD='test --coverage'


before_install:

    # We do this to make sure we get the dependencies so pip works below
    - export PYTHONIOENCODING=UTF8
    - wget $MINICONDA_URL -O miniconda.sh
    - chmod +x miniconda.sh
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH=$HOME/miniconda/bin:$PATH
    - hash -r
    - conda update --yes conda


install:

    - conda env create -f carsus_env3.yml
    - source activate carsus
    # install the CHIANTI database
    - mkdir $HOME/chianti
    - wget $CHIANTI_DATA_URL -O $HOME/chianti/CHIANTI_8.0.2_data.tar.gz
    - tar -zxvf $HOME/chianti/CHIANTI_8.0.2_data.tar.gz -C $HOME/chianti
    - export XUVTOP=$HOME/chianti
    # Fetch the testing database from carsus-db
    - if [[ $TEST_MODE == 'with_test_db' ]]; then conda install -c ostrokach git-lfs=1.2.1 -y; fi
    - if [[ $TEST_MODE == 'with_test_db' ]]; then git lfs install --skip-smudge; fi
    - if [[ $TEST_MODE == 'with_test_db' ]]; then git clone $CARSUS_DB_URL $HOME/carsus-db; fi
    - if [[ $TEST_MODE == 'with_test_db' ]]; then cd $HOME/carsus-db; fi
    - if [[ $TEST_MODE == 'with_test_db' ]]; then git lfs pull --include="test_databases/test.db" origin; fi

script:
    - cd $TRAVIS_BUILD_DIR
    - echo python setup.py $SETUP_CMD
    - python setup.py $SETUP_CMD

after_success:
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls; fi

after_failure:
    - cat /home/travis/.pip/pip.log