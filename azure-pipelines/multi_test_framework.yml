# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

# Specify which branches you want to trigger for continuous deployment and/or applicable for pull requests.
# Otherwise it triggers all of them.

trigger:
  - master

variables:
  SETUP_CMD: ""
  TEST_MODE: "normal"
  CARSUS_DB_URL: "https://github.com/tardis-sn/carsus-db.git"
  CARSUS_REFDATA_URL: "https://github.com/tardis-sn/carsus-refdata.git"
  CHIANTI_DATA_URL: "http://www.chiantidatabase.org/download/CHIANTI_9.0_data.tar.gz"
  XUVTOP: "$HOME/chianti"
  codecov.token: "bd02b09d-d24f-45a3-8c0b-25eec64a29e7"
  system.debug: "true"

jobs:
  - job: "Test"
    pool:
      vmImage: "Ubuntu-16.04"

    strategy:
      matrix:
        simple:
          SETUP_CMD: ""
          TEST_MODE: "simple"

        remote_data:
          SETUP_CMD: "--remote-data"
          TEST_MODE: "remote_data"

        slow:
          SETUP_CMD: "--runslow"
          TEST_MODE: "runslow"

        database:
          SETUP_CMD: "--test-db=$HOME/carsus-db/test_databases/test.db"
          TEST_MODE: "with_test_db"

        refdata:
          SETUP_CMD: "--refdata=$HOME/carsus-refdata"
          TEST_MODE: "refdata"

        coverage:
          SETUP_CMD: "--remote-data --runslow --refdata --cov=carsus --cov-report=xml --cov-report=html"
          TEST_MODE: "coverage"

      maxParallel: 6

    steps:
      - bash: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: "Add conda to PATH"

      - bash: conda env create -f carsus_env3.yml
        displayName: "Install Carsus environment"

      - bash: |
          mkdir -p $XUVTOP
          wget $CHIANTI_DATA_URL -O $XUVTOP/CHIANTI_9.0_data.tar.gz
          tar -zxvf $XUVTOP/CHIANTI_9.0_data.tar.gz -C $XUVTOP
        displayName: "Fetch Chianti database"

      - bash: |
          source activate carsus
          git clone $CARSUS_DB_URL $HOME/carsus-db
        condition: and(succeeded(), eq(variables['TEST_MODE'], 'with_test_db'))
        displayName: "Fetch testing database"

      - bash: |
          source activate carsus
          #git clone $CARSUS_REFDATA_URL $HOME/carsus-refdata.git
          git clone https://github.com/epassaro/carsus-refdata.git $HOME/carsus-refdata
          cd $HOME/carsus-refdata
          git checkout update-readme
        condition: and(succeeded(), eq(variables['TEST_MODE'], 'refdata'))
        displayName: "Fetch Carsus reference data"

      - bash: |
          source activate carsus
          pip install pytest-azurepipelines
          pytest carsus $SETUP_CMD
        displayName: "Carsus test"

      - bash: |
          bash <(curl -s https://codecov.io/bash)
        condition: and(succeeded(), eq(variables['TEST_MODE'], 'coverage'))
        displayName: "Upload to codecov.io"
