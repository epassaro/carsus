# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

# Specify which branches you want to trigger for continuous deployment and/or applicable for pull requests.
# Otherwise it triggers all of them.

trigger:
- master

pr:
- master

variables:
  SETUP_CMD: ""
  TEST_MODE: "normal"
  CHIANTI_DATA_URL: "http://www.chiantidatabase.org/download/CHIANTI_9.0_data.tar.gz"
  CARSUS_DB_URL: "https://github.com/tardis-sn/carsus-db.git"
  CARSUS_REFDATA_URL: "https://github.com/tardis-sn/carsus-refdata.git"
  codecov.token: 'bd02b09d-d24f-45a3-8c0b-25eec64a29e7'

jobs:

- job: "Test"

  pool:
    vmImage: "Ubuntu-16.04"
  strategy:
    matrix:
      simple:
        SETUP_CMD: ""
      remote_data:
        SETUP_CMD: "--remote-data"
      slow:
        SETUP_CMD: "--runslow"
      database:
        SETUP_CMD: "--test-db=$HOME/carsus-db/test_databases/test.db"
        TEST_MODE: "with_test_db"
      refdata:
        SETUP_CMD: "--refdata=$HOME/carsus-refdata"
        TEST_MODE: "refdata"
      coverage:
        SETUP_CMD: "--cov=carsus --cov-report=xml --cov-report=html"
    
    maxParallel: 5

  steps:

# Add conda to path
  - bash: |
          echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

# Update conda and change its permissions to the Azure user 'vsts'
  - bash: |
          sudo chown -R $USER $CONDA
          #conda update -y conda
    displayName: "updating conda and activating"

  - bash: |
          conda env create -f carsus_env3.yml
    displayName: "Install Carsus env"

# Download chianti data for tests
  - bash: |
          mkdir /usr/share/chianti
          wget $CHIANTI_DATA_URL -O /usr/share/chianti/CHIANTI_9.0_data.tar.gz
          tar -zxvf /usr/share/chianti/CHIANTI_9.0_data.tar.gz -C /usr/share/chianti
    displayName: "Fetch Chianti Data"

# Download database testing data for TEST_MODE
  - bash: |
          source activate carsus
          conda install git-lfs -c conda-forge -y
          git lfs install --skip-smudge
          git clone $CARSUS_DB_URL $HOME/carsus-db
          cd $HOME/carsus-db
          git lfs pull --include="test_databases/test.db" origin
    condition: and(succeeded(), eq(variables['TEST_MODE'], 'with_test_db'))
    displayName: "Fetch the testing database from carsus-db"

  - bash: |
          source activate carsus
          git clone $CARSUS_REFDATA_URL $HOME/carsus-refdata
    condition: and(succeeded(), eq(variables['TEST_MODE'], 'refdata'))
    displayName: "Fetch carsus reference data"

  - bash: |
          source activate carsus
          echo pytest carsus $SETUP_CMD
          pip install pytest-azurepipelines
          pytest carsus $SETUP_CMD
    displayName: "Carsus test"

  - bash: |
          bash <(curl -s https://codecov.io/bash)
    condition: and(succeeded(), eq(variables['SETUP_CMD'], '--cov=carsus --cov-report=xml --cov-report=html'))
    displayName: "Upload to codecov.io"
